{"version":3,"sources":["img/test.jpg","views/Home.js","api/face.js","views/ImageInput.js","views/VideoInput.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","to","Component","loadModels","a","MODEL_URL","process","faceapi","getFullFaceDescription","blob","inputSize","scoreThreshold","OPTION","useTinyModel","img","withFaceLandmarks","withFaceDescriptors","fullDesc","createMatcher","faceProfile","members","Object","keys","labeledDescriptors","map","member","name","descriptors","descriptor","Float32Array","faceMatcher","testImg","require","JSON_PROFILE","INIT_STATE","imageURL","detections","match","ImageInput","props","componentWillMount","setState","handleImage","state","image","then","fd","detection","findBestMatch","handleFileChange","event","resetState","URL","createObjectURL","target","files","loading","this","drawBox","i","_H","box","height","_W","width","_X","_x","_Y","_y","key","style","position","border","borderColor","transform","backgroundColor","marginTop","color","_label","id","type","onChange","accept","src","alt","withRouter","VideoInput","setInputDevice","navigator","mediaDevices","enumerateDevices","devices","filter","device","kind","length","facingMode","exact","startCapture","interval","setInterval","capture","webcam","current","getScreenshot","React","createRef","clearInterval","videoConstraints","camera","className","display","flexDirection","alignItems","audio","ref","screenshotFormat","App","history","createHistory","basename","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4d73e3f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.ccd20247.jpg\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Home extends Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h2>Face Recognation</h2>\r\n                <li>\r\n                    <Link to=\"/photo\">Photo Input</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/camera\">Video Camera</Link>\r\n                </li>\r\n            </div>\r\n        )\r\n    }\r\n}","import * as faceapi from 'face-api.js';\r\n\r\n// Load models and weights\r\nexport async function loadModels() {\r\n  const MODEL_URL = process.env.PUBLIC_URL + '/models';\r\n  await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\r\n  await faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\r\n  await faceapi.loadFaceRecognitionModel(MODEL_URL);\r\n}\r\n\r\nexport async function getFullFaceDescription(blob, inputSize = 512) {\r\n  // tiny_face_detector options\r\n  let scoreThreshold = 0.5;\r\n  const OPTION = new faceapi.TinyFaceDetectorOptions({\r\n    inputSize,\r\n    scoreThreshold\r\n  });\r\n  const useTinyModel = true;\r\n\r\n  // fetch image to api\r\n  let img = await faceapi.fetchImage(blob);\r\n\r\n  // detect all faces and generate full description from image\r\n  // including landmark and descriptor of each face\r\n  let fullDesc = await faceapi\r\n    .detectAllFaces(img, OPTION)\r\n    .withFaceLandmarks(useTinyModel)\r\n    .withFaceDescriptors();\r\n  return fullDesc;\r\n}\r\n\r\nconst maxDescriptorDistance = 0.5;\r\nexport async function createMatcher(faceProfile) {\r\n  // Create labeled descriptors of member from profile\r\n  let members = Object.keys(faceProfile);\r\n  let labeledDescriptors = members.map(\r\n    member =>\r\n      new faceapi.LabeledFaceDescriptors(\r\n        faceProfile[member].name,\r\n        faceProfile[member].descriptors.map(\r\n          descriptor => new Float32Array(descriptor)\r\n        )\r\n      )\r\n  );\r\n\r\n  // Create face matcher (maximum descriptor distance is 0.5)\r\n  let faceMatcher = new faceapi.FaceMatcher(\r\n    labeledDescriptors,\r\n    maxDescriptorDistance\r\n  );\r\n  return faceMatcher;\r\n}","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { loadModels, getFullFaceDescription, createMatcher } from '../api/face';\r\n\r\n// Import image to test API\r\nconst testImg = require('../img/test.jpg');\r\n\r\n// Import face profile\r\nconst JSON_PROFILE = require('../descriptors/bnk48.json');\r\n\r\n// Initial State\r\nconst INIT_STATE = {\r\n  imageURL: testImg,\r\n  fullDesc: null,\r\n  detections: null,\r\n  descriptors: null,\r\n  match: null\r\n};\r\n\r\nclass ImageInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INIT_STATE, faceMatcher: null };\r\n  }\r\n\r\n  componentWillMount = async () => {\r\n    await loadModels();\r\n    this.setState({ faceMatcher: await createMatcher(JSON_PROFILE) });\r\n    await this.handleImage(this.state.imageURL);\r\n  };\r\n\r\n  handleImage = async (image = this.state.imageURL) => {\r\n    await getFullFaceDescription(image).then(fullDesc => {\r\n      if (!!fullDesc) {\r\n        this.setState({\r\n          fullDesc,\r\n          detections: fullDesc.map(fd => fd.detection),\r\n          descriptors: fullDesc.map(fd => fd.descriptor)\r\n        });\r\n      }\r\n    });\r\n\r\n    if (!!this.state.descriptors && !!this.state.faceMatcher) {\r\n      let match = await this.state.descriptors.map(descriptor =>\r\n        this.state.faceMatcher.findBestMatch(descriptor)\r\n      );\r\n      this.setState({ match });\r\n    }\r\n  };\r\n\r\n  handleFileChange = async event => {\r\n    this.resetState();\r\n    await this.setState({\r\n      imageURL: URL.createObjectURL(event.target.files[0]),\r\n      loading: true\r\n    });\r\n    this.handleImage();\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({ ...INIT_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { imageURL, detections, match } = this.state;\r\n\r\n    let drawBox = null;\r\n    if (!!detections) {\r\n      drawBox = detections.map((detection, i) => {\r\n        let _H = detection.box.height;\r\n        let _W = detection.box.width;\r\n        let _X = detection.box._x;\r\n        let _Y = detection.box._y;\r\n        return (\r\n          <div key={i}>\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                border: 'solid',\r\n                borderColor: 'blue',\r\n                height: _H,\r\n                width: _W,\r\n                transform: `translate(${_X}px,${_Y}px)`\r\n              }}\r\n            >\r\n              {!!match && !!match[i] ? (\r\n                <p\r\n                  style={{\r\n                    backgroundColor: 'blue',\r\n                    border: 'solid',\r\n                    borderColor: 'blue',\r\n                    width: _W,\r\n                    marginTop: 0,\r\n                    color: '#fff',\r\n                    transform: `translate(-3px,${_H}px)`\r\n                  }}\r\n                >\r\n                  {match[i]._label}\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          id=\"myFileUpload\"\r\n          type=\"file\"\r\n          onChange={this.handleFileChange}\r\n          accept=\".jpg, .jpeg, .png\"\r\n        />\r\n        <div style={{ position: 'relative' }}>\r\n          <div style={{ position: 'absolute' }}>\r\n            <img src={imageURL} alt=\"imageURL\" />\r\n          </div>\r\n          {!!drawBox ? drawBox : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ImageInput);","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Webcam from 'react-webcam';\r\nimport { loadModels, getFullFaceDescription, createMatcher } from '../api/face';\r\n\r\n// Import face profile\r\nconst JSON_PROFILE = require('../descriptors/bnk48.json');\r\n\r\nconst WIDTH = 420;\r\nconst HEIGHT = 420;\r\nconst inputSize = 160;\r\n\r\nclass VideoInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.webcam = React.createRef();\r\n    this.state = {\r\n      fullDesc: null,\r\n      detections: null,\r\n      descriptors: null,\r\n      faceMatcher: null,\r\n      match: null,\r\n      facingMode: null\r\n    };\r\n  }\r\n\r\n  componentWillMount = async () => {\r\n    await loadModels();\r\n    this.setState({ faceMatcher: await createMatcher(JSON_PROFILE) });\r\n    this.setInputDevice();\r\n  };\r\n\r\n  setInputDevice = () => {\r\n    navigator.mediaDevices.enumerateDevices().then(async devices => {\r\n      let inputDevice = await devices.filter(\r\n        device => device.kind === 'videoinput'\r\n      );\r\n      if (inputDevice.length < 2) {\r\n        await this.setState({\r\n          facingMode: 'user'\r\n        });\r\n      } else {\r\n        await this.setState({\r\n          facingMode: { exact: 'environment' }\r\n        });\r\n      }\r\n      this.startCapture();\r\n    });\r\n  };\r\n\r\n  startCapture = () => {\r\n    this.interval = setInterval(() => {\r\n      this.capture();\r\n    }, 1500);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  capture = async () => {\r\n    if (!!this.webcam.current) {\r\n      await getFullFaceDescription(\r\n        this.webcam.current.getScreenshot(),\r\n        inputSize\r\n      ).then(fullDesc => {\r\n        if (!!fullDesc) {\r\n          this.setState({\r\n            detections: fullDesc.map(fd => fd.detection),\r\n            descriptors: fullDesc.map(fd => fd.descriptor)\r\n          });\r\n        }\r\n      });\r\n\r\n      if (!!this.state.descriptors && !!this.state.faceMatcher) {\r\n        let match = await this.state.descriptors.map(descriptor =>\r\n          this.state.faceMatcher.findBestMatch(descriptor)\r\n        );\r\n        this.setState({ match });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { detections, match, facingMode } = this.state;\r\n    let videoConstraints = null;\r\n    let camera = '';\r\n    if (!!facingMode) {\r\n      videoConstraints = {\r\n        width: WIDTH,\r\n        height: HEIGHT,\r\n        facingMode: facingMode\r\n      };\r\n      if (facingMode === 'user') {\r\n        camera = 'Front';\r\n      } else {\r\n        camera = 'Back';\r\n      }\r\n    }\r\n\r\n    let drawBox = null;\r\n    if (!!detections) {\r\n      drawBox = detections.map((detection, i) => {\r\n        let _H = detection.box.height;\r\n        let _W = detection.box.width;\r\n        let _X = detection.box._x;\r\n        let _Y = detection.box._y;\r\n        return (\r\n          <div key={i}>\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                border: 'solid',\r\n                borderColor: 'blue',\r\n                height: _H,\r\n                width: _W,\r\n                transform: `translate(${_X}px,${_Y}px)`\r\n              }}\r\n            >\r\n              {!!match && !!match[i] ? (\r\n                <p\r\n                  style={{\r\n                    backgroundColor: 'blue',\r\n                    border: 'solid',\r\n                    borderColor: 'blue',\r\n                    width: _W,\r\n                    marginTop: 0,\r\n                    color: '#fff',\r\n                    transform: `translate(-3px,${_H}px)`\r\n                  }}\r\n                >\r\n                  {match[i]._label}\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className=\"Camera\"\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        <p>Camera: {camera}</p>\r\n        <div\r\n          style={{\r\n            width: WIDTH,\r\n            height: HEIGHT\r\n          }}\r\n        >\r\n          <div style={{ position: 'relative', width: WIDTH }}>\r\n            {!!videoConstraints ? (\r\n              <div style={{ position: 'absolute' }}>\r\n                <Webcam\r\n                  audio={false}\r\n                  width={WIDTH}\r\n                  height={HEIGHT}\r\n                  ref={this.webcam}\r\n                  screenshotFormat=\"image/jpeg\"\r\n                  videoConstraints={videoConstraints}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            {!!drawBox ? drawBox : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(VideoInput);","import React, { Component } from 'react';\nimport { Route, Router } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport './App.css';\n\nimport Home from './views/Home';\nimport ImageInput from './views/ImageInput';\nimport VideoInput from './views/VideoInput';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router history={createHistory({ basename: process.env.PUBLIC_URL })}>\n          <div className=\"route\">\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/photo\" component={ImageInput} />\n            <Route exact path=\"/camera\" component={VideoInput} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}